# clavis_event_inventory/config/settings.py

"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.
(Version might differ slightly based on your Django install)

For more information on this file, see
https://docs.djangoproject.com/en/stable/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/stable/ref/settings/
"""

from pathlib import Path
import os # Often needed, good to have

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/stable/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Using a hardcoded, guessable key like this is VERY INSECURE! Consider generating a new one.
SECRET_KEY = 'Store@clavis' # <--- CHANGED AS REQUESTED - HIGHLY INSECURE!

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True # Keep True for development, set to False for production

ALLOWED_HOSTS = [] # Keep empty for local development using 127.0.0.1


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',  # <--- ADDED THIS LINE
    # Your apps
    'dashboard.apps.DashboardConfig',
    'inventory.apps.InventoryConfig',
    'clients.apps.ClientsConfig',
    'suppliers.apps.SuppliersConfig',
    'bookings.apps.BookingsConfig',
    'reports.apps.ReportsConfig', 
    # Add any third-party apps later if needed
    'users.apps.UsersConfig',
    'request_quote.apps.RequestQuoteConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls' # Points to your main urls.py file

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Added project-level templates directory
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True, # Allows Django to look for templates inside apps
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request', # Important for admin and other features
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application' # For deploying with WSGI servers


# Database
# https://docs.djangoproject.com/en/stable/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'database.db',
    }
}


# Password validation
# https://docs.djangoproject.com/en/stable/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/stable/topics/i18n/

LANGUAGE_CODE = 'en-us' # Default language

# Set to your local time zone
TIME_ZONE = 'Asia/Bahrain' # Set to Riffa, Bahrain time zone

USE_I18N = True # Enable Django's translation system

USE_TZ = True # Enable timezone-aware datetimes (Recommended)


# Static files (CSS, JavaScript, Images for the site itself)
# https://docs.djangoproject.com/en/stable/howto/static-files/

STATIC_URL = 'static/' # URL prefix for static files served from STATIC_ROOT or found by finders

# ADDED THIS BACK IN - Tells Django where to find the project-level 'static' folder
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# STATIC_ROOT = BASE_DIR / 'staticfiles' # Used during deployment collectstatic, not usually needed for dev


# Media files (User-uploaded content like item images)
MEDIA_URL = '/media/' # URL prefix for media files served from MEDIA_ROOT
MEDIA_ROOT = BASE_DIR / 'media' # Absolute filesystem path to the directory for user uploads


# Default primary key field type
# https://docs.djangoproject.com/en/stable/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField' # Modern default (auto-incrementing 64-bit integer)


# Authentication URLs (Uncommented and configured)
# Define where login page is
LOGIN_URL = '/admin/login/' # MODIFIED - Point to admin login for now
# Where to redirect *after* successful login if no 'next' parameter is specified
# Since our dashboard is at the root URL ('/'), this is a sensible default.
LOGIN_REDIRECT_URL = '/'
# Where to redirect after logout
LOGOUT_REDIRECT_URL = '/'

# Add a SITE_URL setting for constructing full URLs in notifications (optional for now, but good practice)
# Replace with your actual domain in production.
SITE_URL = 'http://127.0.0.1:8000'