# Generated by Django 5.2 on 2025-05-04 10:19

import bookings.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clients', '0001_initial'),
        ('inventory', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(help_text='The date and time the event/rental period begins.')),
                ('end_date', models.DateTimeField(help_text='The date and time the event/rental period ends.')),
                ('notes', models.TextField(blank=True, help_text='Internal notes or special instructions for this booking.', null=True)),
                ('reference_number', models.CharField(default=bookings.models.generate_reference_number, editable=False, help_text='Unique system-generated reference number for this booking.', max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_location', models.CharField(help_text='Specific address or location description for the event.', max_length=255)),
                ('status', models.CharField(choices=[('PLANNED', 'Planned'), ('ACTIVE', 'Active'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='PLANNED', help_text='Current status of the event booking.', max_length=10)),
                ('client', models.ForeignKey(help_text='The client associated with this booking.', on_delete=django.db.models.deletion.PROTECT, related_name='%(class)ss', to='clients.client')),
            ],
            options={
                'verbose_name': 'Event Booking',
                'verbose_name_plural': 'Event Bookings',
                'ordering': ['start_date', 'created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rental',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(help_text='The date and time the event/rental period begins.')),
                ('end_date', models.DateTimeField(help_text='The date and time the event/rental period ends.')),
                ('notes', models.TextField(blank=True, help_text='Internal notes or special instructions for this booking.', null=True)),
                ('reference_number', models.CharField(default=bookings.models.generate_reference_number, editable=False, help_text='Unique system-generated reference number for this booking.', max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('BOOKED', 'Booked'), ('OUT', 'Out for Rental'), ('RETURNED', 'Returned'), ('OVERDUE', 'Overdue'), ('CANCELLED', 'Cancelled')], default='BOOKED', help_text='Current status of the rental booking.', max_length=10)),
                ('client', models.ForeignKey(help_text='The client associated with this booking.', on_delete=django.db.models.deletion.PROTECT, related_name='%(class)ss', to='clients.client')),
            ],
            options={
                'verbose_name': 'Rental Booking',
                'verbose_name_plural': 'Rental Bookings',
                'ordering': ['start_date', 'created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='The number of units of this item booked.')),
                ('booking', models.ForeignKey(help_text='The event this item is booked for.', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='bookings.event')),
                ('item', models.ForeignKey(help_text='The specific inventory item booked.', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='inventory.item')),
            ],
            options={
                'verbose_name': 'Event Item',
                'verbose_name_plural': 'Event Items',
                'unique_together': {('booking', 'item')},
            },
        ),
        migrations.CreateModel(
            name='RentalItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='The number of units of this item booked.')),
                ('booking', models.ForeignKey(help_text='The rental this item is booked for.', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='bookings.rental')),
                ('item', models.ForeignKey(help_text='The specific inventory item booked.', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='inventory.item')),
            ],
            options={
                'verbose_name': 'Rental Item',
                'verbose_name_plural': 'Rental Items',
                'unique_together': {('booking', 'item')},
            },
        ),
    ]
